name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'index.html'  # Trigger on changes to the index.html file

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install ngrok directly (if needed)
      # - name: Download ngrok
      #   run: |
      #     curl -o ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
      #     unzip ngrok.zip
      #     chmod +x ngrok
      #     sudo mv ngrok /usr/local/bin/ngrok

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: arunazhagappan/nginx-image:latest

      - name: Restart NGINX container
        run: |
          docker restart nginx-test-container
          echo "NGINX container restarted."

      - name: Run NGINX container for tests
        run: |
          sleep 10  # Adjust sleep time based on NGINX startup time
          response=$(curl -s -I http://localhost:8080/index.html)
          echo "NGINX Test Response:"
          echo "$response"
          echo ""
          echo "NGINX Test Content:"
          curl -s http://localhost:8080/index.html
          docker logs nginx-test-container  # Output logs for debugging
          docker stop nginx-test-container
          docker rm nginx-test-container

      - name: Trigger ArgoCD sync
        run: |
          echo "Triggering ArgoCD sync..."
          curl -k -X POST https://e952-117-242-217-241.ngrok-free.app/api/v1/applications/my-app/sync \
          -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" || { echo "Failed to trigger ArgoCD sync"; exit 1; }
        env:
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
