name: Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'index.html'  # Trigger on changes to the index.html file

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: arunazhagappan/newimage:latest

      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install jq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.16.2/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update deployment.yaml
        run: |
          NEW_IMAGE="arunazhagappan/newimage:latest"
          yq e ".spec.template.spec.containers[].image = \"$NEW_IMAGE\"" -i deployment.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add deployment.yaml
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update image to arunazhagappan/newimage:latest"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger ArgoCD sync
        run: |
          echo "Triggering ArgoCD sync..."
          curl -k -X POST https://argocd.example.com/api/v1/applications/my-app/sync \
          -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"revision": "HEAD", "prune": true}' \
          || { echo "Failed to trigger ArgoCD sync"; exit 1; }
        env:
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
